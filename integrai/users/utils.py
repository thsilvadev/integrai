import re


def is_valid_name_and_email(message):

    # Remover espa√ßos antes e depois da string
    message = message.strip()

    # Verificar se a mensagem cont√©m exatamente uma v√≠rgula
    if message.count(',') != 1:
        print("Formato inv√°lido: a mensagem deve conter exatamente uma v√≠rgula.")
        return None

    # Separar a mensagem em nome e email
    name, email = message.split(',', 1)
    name = name.strip()
    email = email.strip()

    # Validar o email
    if not is_valid_email(email):
        print(f"Email inv√°lido: {email}")
        return None

    # Verificar se o nome e o email n√£o est√£o vazios
    if not name or not email:
        print("Nome ou email n√£o podem estar vazios.")
        return None

    return [name, email]


def is_valid_email(email):
    """
    Valida se o email possui uma estrutura m√≠nima v√°lida.

    :param email: O email a ser validado
    :return: True se o email for v√°lido, False caso contr√°rio
    """
    # Express√£o regular simples para verificar se o email cont√©m @ e .
    email_regex = r"[^@]+@[^@]+\.[^@]+"
    return bool(re.match(email_regex, email))


def ranking():
    from .models import User
    # Obt√©m todos os usu√°rios ordenados pelo quiz_score em ordem decrescente
    users = User.objects.all().order_by('-quiz_score')[:10]  # Pega os 10 melhores usu√°rios

    # Formata o ranking como uma string
    ranking_string = "üèÜ *Ranking dos Melhores Jogadores*\n\n"

    for posicao, user in enumerate(users, start=1):
        ranking_string += f"{posicao} - {user.name} - {user.quiz_score}\n\n"

    return ranking_string


